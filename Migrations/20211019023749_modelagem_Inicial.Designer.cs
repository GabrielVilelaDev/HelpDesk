// <auto-generated />
using System;
using HelpDesk.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HelpDesk.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211019023749_modelagem_Inicial")]
    partial class modelagem_Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HelpDesk.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("HelpDesk.Models.Credencial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Credencial");
                });

            modelBuilder.Entity("HelpDesk.Models.Prioridade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("peso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prioridade");
                });

            modelBuilder.Entity("HelpDesk.Models.Setor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Setor");
                });

            modelBuilder.Entity("HelpDesk.Models.StatusChamado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusChamado");
                });

            modelBuilder.Entity("HelpDesk.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("assunto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("categoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("criadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataAbertura")
                        .HasColumnType("datetime2");

                    b.Property<int?>("prioridadeId")
                        .HasColumnType("int");

                    b.Property<int?>("responsavelId")
                        .HasColumnType("int");

                    b.Property<int?>("statusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("categoriaId");

                    b.HasIndex("criadorId");

                    b.HasIndex("prioridadeId");

                    b.HasIndex("responsavelId");

                    b.HasIndex("statusId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("HelpDesk.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("credencialId")
                        .HasColumnType("int");

                    b.Property<int?>("setorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("credencialId");

                    b.HasIndex("setorId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("HelpDesk.Models.Ticket", b =>
                {
                    b.HasOne("HelpDesk.Models.Categoria", "categoria")
                        .WithMany()
                        .HasForeignKey("categoriaId");

                    b.HasOne("HelpDesk.Models.Usuario", "criador")
                        .WithMany()
                        .HasForeignKey("criadorId");

                    b.HasOne("HelpDesk.Models.Prioridade", "prioridade")
                        .WithMany()
                        .HasForeignKey("prioridadeId");

                    b.HasOne("HelpDesk.Models.Usuario", "responsavel")
                        .WithMany()
                        .HasForeignKey("responsavelId");

                    b.HasOne("HelpDesk.Models.StatusChamado", "status")
                        .WithMany()
                        .HasForeignKey("statusId");

                    b.Navigation("categoria");

                    b.Navigation("criador");

                    b.Navigation("prioridade");

                    b.Navigation("responsavel");

                    b.Navigation("status");
                });

            modelBuilder.Entity("HelpDesk.Models.Usuario", b =>
                {
                    b.HasOne("HelpDesk.Models.Credencial", "credencial")
                        .WithMany()
                        .HasForeignKey("credencialId");

                    b.HasOne("HelpDesk.Models.Setor", "setor")
                        .WithMany()
                        .HasForeignKey("setorId");

                    b.Navigation("credencial");

                    b.Navigation("setor");
                });
#pragma warning restore 612, 618
        }
    }
}
